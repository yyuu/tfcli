#!/usr/bin/env bash

set -euo pipefail

[[ -z "${DEBUG:-}" ]] || set -x

unset arg_max_items
unset arg_output
unset arg_page_number
unset arg_page_size
unset arg_request
unset arg_request_path
unset arg_retry

arg_paginate=1
curl_args=()

while [[ $# -gt 0 ]]; do
  case "${1:-}" in
  "--" )
    break
    ;;
  "--debug" ) # option: Enable debug output
    set -x
    ;;
  "--complete" )
    tfc-helper-complete "${BASH_SOURCE##*/}"
    exit 0
    ;;
  "--help" ) # option: Display help message
    tfc-helper-help "${BASH_SOURCE##*/}"
    exit 0
    ;;
  "--max-items" | "--max-items="* ) # option: TODO
    if [[ "$1" == *"="* ]]; then
      arg_max_items="${1#*=}"
    else
      arg_max_items="${2:-}"
      shift 1
    fi
    ;;
  "--output" | "--output="* ) # option: Specify output format (json/text)
    if [[ "$1" == *"="* ]]; then
      arg_output="${1#*=}"
    else
      arg_output="${2:-}"
      shift 1
    fi
    ;;
  "--page-number" | "--page-number="* ) # option: TODO
    if [[ "$1" == *"="* ]]; then
      arg_page_number="${1#*=}"
    else
      arg_page_number="${2:-}"
      shift 1
    fi
    ;;
  "--page-size" | "--page-size="* ) # option: TODO
    if [[ "$1" == *"="* ]]; then
      arg_page_size="${1#*=}"
    else
      arg_page_size="${2:-}"
      shift 1
    fi
    ;;
  "--paginate" | "--no-paginate" ) # option: Enable or disable automatic pagination. By default it performs auto pagination.
    if [[ "$1" == "--no-"* ]]; then
      arg_paginate=
    else
      arg_paginate=1
    fi
    ;;
  "--request" | "--request="* | "-X" ) # option: TODO
    if [[ "$1" == *"="* ]]; then
      arg_request="${1#*=}"
    else
      arg_request="${2:-}"
      shift 1
    fi
    ;;
  "--request-path" | "--request-path="* ) # option: TODO
    if [[ "$1" == *"="* ]]; then
      arg_request_path="${1#*=}"
    else
      arg_request_path="${2:-}"
      shift 1
    fi
    ;;
  "--retry" | "--retry="* ) # option: TODO
    if [[ "$1" == *"="* ]]; then
      arg_retry="${1#*=}"
    else
      arg_retry="${2:-}"
      shift 1
    fi
    ;;
  * )
    curl_args+=("${1:-}")
    ;;
  esac
  shift 1
done

if ! command -v curl 1>/dev/null 2>&1; then
  tfc-helper-logger --level=error "${0##*/}: curl is not available"
  exit 1
fi

if ! command -v curl 1>/dev/null 2>&1; then
  tfc-helper-logger --level=error "${0##*/}: jq is not available"
  exit 1
fi

curl_version="$({ curl --version 2>/dev/null || true; } | head -1)"
curl_version="${curl_version#curl }" # remove leading "curl "
curl_version="${curl_version%% *}"
curl_version_major="$(cut -d. -f1 <<< "${curl_version:-}")"
curl_version_minor="$(cut -d. -f2 <<< "${curl_version:-}")"

curl_args+=("--fail")

if [[ -z "${TF_CLOUD_TOKEN:-}" ]]; then
  tfc-helper-logger --level=error "${0##*/}: TF_CLOUD_TOKEN is not set"
  exit 1
fi
curl_args+=("--header" "authorization: Bearer ${TF_CLOUD_TOKEN}")
curl_args+=("--header" "content-type: application/vnd.api+json")
curl_args+=("--max-time" "30")

curl_args+=("--request" "${arg_request:-GET}")
if [[ -n "${arg_retry:-}" ]]; then
  curl_args+=("--retry" "${arg_retry:-5}" "--retry-max-time" "60")
  if [[ ${curl_version_major:-0} -gt 7 ]] || { [[ ${curl_version_major:-0} -ge 7 ]] && [[ ${curl_version_minor:-0} -ge 52 ]]; }; then
    # skip using `--retry-connrefused` if curl was older than 7.52.0
    curl_args+=("--retry-connrefused")
  fi
else
  if [[ "${arg_request:-GET}" == "GET" ]]; then
    # retry by default for GETs
    curl_args+=("--retry" "${arg_retry:-5}" "--retry-max-time" "60")
    if [[ ${curl_version_major:-0} -gt 7 ]] || { [[ ${curl_version_major:-0} -ge 7 ]] && [[ ${curl_version_minor:-0} -ge 52 ]]; }; then
      # skip using `--retry-connrefused` if curl was older than 7.52.0
      curl_args+=("--retry-connrefused")
    fi
  fi
fi

if [[ -n "${VERBOSE:-}" ]]; then
  curl_args+=("--verbose")
else
  curl_args+=("--silent")
fi

if [[ -z "${arg_request_path:-}" ]]; then
  tfc-helper-logger --level=error "${0##*/}: request path was not given"
  exit 1
fi

# TODO: to allow overriding this via envvar...?
TF_CLOUD_ENDPOINT="https://${TFC_HOSTNAME:-app.terraform.io}/api/v2"

if [[ -n "${arg_page_number:-}" ]]; then
  # disable automatic pagination if page number was specified
  unset arg_paginate
  curl_args+=("--get" "--data" "page[number]=${arg_page_number}")
fi

if [[ -n "${arg_page_size:-}" ]]; then
  curl_args+=("--get" "--data" "page[size]=${arg_page_size}")
fi

if [[ -z "${arg_paginate:-}" ]]; then
  curl "${curl_args[@]}" "${TF_CLOUD_ENDPOINT%/}/${arg_request_path#/}" | \
    case "${arg_output:-json}" in
    "json" )
      jq '.'
      ;;
    "text" )
      cat
      ;;
    * )
      tfc-helper-logger --level=error "${0##*/}: unknown output format: ${arg_output:-}"
      exit 1
      ;;
    esac
else
  if [[ "${arg_output:-json}" != "json" ]]; then
    tfc-helper-logger --level=error "${0##*/}: unsupported output format: ${arg_output:-}"
    exit 1
  fi
  total_items=0
  resps=()
  next_page="${TF_CLOUD_ENDPOINT%/}/${arg_request_path#/}"
  while [[ "${next_page:-null}" != null ]]; do
    # TODO: limit the # of items to NOT exceed the `--max-items`
    if [[ -z "${arg_max_items:-}" ]] || [[ "${total_items}" -lt "${arg_max_items}" ]]; then
      echo -n "." 1>&2
      resp="$(mktemp "${TMPDIR}/resp.XXXXXXXX")"
      curl "${curl_args[@]}" "${next_page}" > "${resp}"
      data_length="$(jq --raw-output '.data // [] | length' < "${resp}")"
      total_items="$(( total_items + data_length ))"
      resps+=("${resp}")
      next_page="$(jq --raw-output '.links.next' < "${resp}")"
    else
      break
    fi
  done
  echo 1>&2
  if [[ ${#resps[*]} -eq 0 ]]; then
    tfc-helper-logger --level=error "${0##*/}: something went wrong. no response was captured from ${next_page}"
    exit 1
  else
    if [[ ${#resps[*]} -eq 1 ]]; then
      jq '.' "${resps[@]}"
    else
      jq --slurp '{data: map(.data // [] | .[]), links: (.[-1].links // {}), meta: (.[-1].meta // {})}' "${resps[@]}"
    fi
  fi
fi

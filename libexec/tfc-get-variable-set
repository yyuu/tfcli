#!/usr/bin/env bash
# summary: https://www.terraform.io/cloud-docs/api-docs/variable-sets#show-variable-set

set -euo pipefail

[[ -z "${DEBUG:-}" ]] || set -x

unset arg_varset_id
unset arg_varset_name

httpclient_args=()

while [[ $# -gt 0 ]]; do
  case "${1:-}" in
  "--" )
    break
    ;;
  "--complete" )
    tfc-helper-complete "${BASH_SOURCE##*/}"
    tfc-helper-cache-get --table="VariableSets" --id-glob='*' | \
      jq --raw-output 'map("--varset-id=\(.id)") | unique[]'
    tfc-helper-cache-get --table="VariableSets" --id-glob='*' | \
      jq --raw-output 'map("--varset-name=\(.attributes | fromjson | .name)") | unique[]'
    exit 0
    ;;
  "--debug" ) # option: Enable debug output
    set -x
    ;;
  "--help" ) # option: Display help message
    tfc-helper-help "${BASH_SOURCE##*/}"
    exit 0
    ;;
  "--varset-id" | "--varset-id="* ) # option: Variable Set ID
    if [[ "$1" == *"="* ]]; then
      arg_varset_id="${1#*=}"
    else
      arg_varset_id="${2:-}"
      shift 1
    fi
    ;;
  "--varset-name" | "--varset-name="* ) # option: Variable Set name
    if [[ "$1" == *"="* ]]; then
      arg_varset_name="${1#*=}"
    else
      arg_varset_name="${2:-}"
      shift 1
    fi
    ;;
  "--verbose" | "-v" ) # option: Enable verbose output
    export VERBOSITY="$(( VERBOSITY + 1 ))"
    ;;
  * )
    tfc-helper-logger --level=error "${0##*/}: unrecognized option: ${1:-}"
    exit 1
    ;;
  esac
  shift 1
done

if [[ -z "${arg_varset_id:-}" ]]; then
  if [[ -z "${arg_varset_name:-}" ]]; then
    :
  else
    arg_varset_id="$(tfc-list-variable-sets | jq --arg name "${arg_varset_name}" --raw-output '.data | map(select(.attributes.name == $name))[].id')"
  fi
  if [[ -z "${arg_varset_id:-}" ]]; then
    tfc-helper-logger --level=error "${0##*/}: variable set id was not given"
    exit 1
  fi
fi

# https://www.terraform.io/cloud-docs/api-docs/variable-sets#show-variable-set
tfc-helper-httpclient --request-path="/varsets/${arg_varset_id}" "${httpclient_args[@]}" --no-paginate | \
  tfc-helper-cache-set --partial --table="VariableSets"

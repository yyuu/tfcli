#!/usr/bin/env bash

set -euo pipefail

[[ -z "${DEBUG:-}" ]] || set -x

unset arg_command

while [[ $# -gt 0 ]]; do
  case "${1:-}" in
  "--" )
    break
    ;;
  "--complete" )
    tfc-helper-complete "${BASH_SOURCE##*/}"
    exit 0
    ;;
  "--debug" ) # option: Enable debug output
    set -x
    ;;
  "--help" ) # option: Display help message
    exit 0
    ;;
  "--verbose" | "-v" ) # option: Enable verbose output
    export VERBOSITY="$(( VERBOSITY + 1 ))"
    ;;
  * )
    arg_command="${1:-}"
    ;;
  esac
  shift 1
done

if [[ -z "${arg_command:-}" ]]; then
  tfc-helper-logger --level=error "${0##*/}: command name was not given"
  exit 1
fi

command_file="$(command -v "tfc-${arg_command}" 2>/dev/null || true)"

if [[ -z "${command_file:-}" ]]; then
  command_file="$(command -v "${arg_command}" 2>/dev/null || true)"
fi

if [[ -z "${command_file:-}" ]]; then
  tfc-helper-logger --level=error "${0##*/}: command not found"
  exit 1
fi

usage="$(sed -n -e '/^# usage: */s///p' "${command_file}")"
if [[ -z "${usage:-}" ]]; then
  usage="${arg_command##*/} [OPTIONS]"
fi
echo "Usage: ${usage:-}"
echo

summary="$(sed -n -e '/^# summary: */s///p' "${command_file}")"
if [[ -z "${summary:-}" ]]; then
  :
else
  echo "Summary: ${summary:-}"
  echo
fi

case_pattern_tag=" ) # option: "
case_patterns=()
while IFS='' read -r line; do case_patterns+=("$line"); done < <(sed -e '/^[[:space:]]*#/d' "${command_file}" | sed -n -e '/^while \[* \$# -gt 0 \]*; do$/,/^done$/p' | grep -F -h "${case_pattern_tag}")

if [[ ${#case_patterns[*]} -gt 0 ]]; then
  echo "Options:"
  for case_pattern in "${case_patterns[@]+"${case_patterns[@]}"}"; do
    # extract `case` pattern expressions
    args_patterns="$(echo "${case_pattern%%"${case_pattern_tag}"*}" | tr -d '"' | tr -d "'" | tr -d ' ' | sed -e 's/|/, /g')"
    # extract help message prepared as comment
    args_message="${case_pattern#*"${case_pattern_tag}"}"
    if [[ "${#args_patterns}" -lt 22 ]]; then
      printf "  %-20s  %s\n" "${args_patterns:-}" "${args_message:-}"
    else
      printf "  %-s\n" "${args_patterns:-}"
      printf "                        %s\n" "${args_message:-}"
    fi
  done
  echo
fi

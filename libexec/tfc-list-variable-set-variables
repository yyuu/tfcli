#!/usr/bin/env bash

set -euo pipefail

[[ -z "${DEBUG:-}" ]] || set -x

unset arg_varset_id
unset arg_varset_name

httpclient_args=()

while [[ $# -gt 0 ]]; do
  case "${1:-}" in
  "--" )
    break
    ;;
  "--complete" )
    tfc-helper-complete "${BASH_SOURCE##*/}"
    exit 0
    ;;
  "--debug" )
    set -x
    ;;
  "--force" ) # option: refresh cache
    :
    ;;
  "--help" ) # option: display help message
    tfc-helper-help "${BASH_SOURCE##*/}"
    exit 0
    ;;
  "--varset-id" | "--varset-id="* ) # option: TODO
    if [[ "$1" == *"="* ]]; then
      arg_varset_id="${1#*=}"
    else
      arg_varset_id="${2:-}"
      shift 1
    fi
    ;;
  "--varset-name" | "--varset-name="* ) # option: TODO
    if [[ "$1" == *"="* ]]; then
      arg_varset_name="${1#*=}"
    else
      arg_varset_name="${2:-}"
      shift 1
    fi
    ;;
  * )
    httpclient_args+=("${1:-}")
    ;;
  esac
  shift 1
done

if [[ -z "${arg_varset_id:-}" ]]; then
  if [[ -z "${arg_varset_name:-}" ]]; then
    tfc-helper-logger --level=error "${0##*/}: variable set id was not given"
    exit 1
  else
    arg_varset_id="$(tfc-list-variable-sets | jq \
      --arg arg_varset_name "${arg_varset_name}" \
      --raw-output \
      '.data | map(select(.attributes.name == $arg_varset_name)) | map(.id)[]' \
    )"
    if [[ -z "${arg_varset_id:-}" ]]; then
      tfc-helper-logger --level=error "${0##*/}: unable to resolve variable set id: ${arg_varset_name:-}"
      exit 1
    fi
  fi
fi

# https://www.terraform.io/cloud-docs/api-docs/variable-sets#list-variables-in-a-variable-set
tfc-helper-httpclient --request-path="/varsets/${arg_varset_id}/relationships/vars" "${httpclient_args[@]}" | \
  tfc-helper-cache-set --table="VariableSetVariables"

#!/usr/bin/env bash

set -euo pipefail

[[ -z "${DEBUG:-}" ]] || set -x

unset arg_names

arg_organization_name="${TF_CLOUD_ORGANIZATION:-}"

while [[ $# -gt 0 ]]; do
  case "${1:-}" in
  "--" )
    break
    ;;
  "--complete" )
    tfc-helper-complete "${BASH_SOURCE##*/}"
    tfc-helper-cache-get --table="Organizations" --id-glob='*' | \
      jq --raw-output 'map("--organization-name=\(.id)") | unique[]'
    tfc-helper-cache-get --table="Organizations" --id-glob='*' | \
      jq --raw-output 'map("--organization-name=\(.attributes | fromjson | .name)") | unique[]'
    exit 0
    ;;
  "--debug" ) # option: Enable debug output
    set -x
    ;;
  "--help" ) # option: Display help message
    tfc-helper-help "${BASH_SOURCE##*/}"
    exit 0
    ;;
  "--organization-name" | "--organization-name="* ) # option: Organization name
    if [[ "$1" == *"="* ]]; then
      arg_organization_name="${1#*=}"
    else
      arg_organization_name="${2:-}"
      shift 1
    fi
    ;;
  "--verbose" ) # option: Enable verbose output
    export VERBOSE=1
    ;;
  * )
    tfc-helper-logger --level=error "${0##*/}: unrecognized option: ${1:-}"
    exit 1
    ;;
  esac
  shift 1
done

if [[ -z "${arg_organization_name:-}" ]]; then
  tfc-helper-logger --level=error "${0##*/}: organization name was not given"
  exit 1
fi

# there is no server side API implementation for listing users.
# doing client side logic for sake of convenience.
mapfile -t user_ids < <(tfc-list-teams --organization-name="${arg_organization_name}" | \
  jq --raw-output '.data | map(.relationships.users.data | map(.id)[]) | unique[]' \
)

{ for user_id in "${user_ids[@]}"; do
    resp="$(tfc-helper-cache-get --table="Users" --id-value="${user_id}" | jq 'map({
      id: .id,
      type: .type,
      attributes: (.attributes // "{}" | fromjson),
      relationships: (.relationships // "{}" | fromjson),
      links: (.links // "{}" | fromjson)
    })[]')"
    if [[ -z "${resp:-}" ]]; then
      resp="$(tfc-get-user --user-id="${user_id}" | jq '.data')"
    fi
    jq '.' <<< "${resp:-}"
  done
} | jq --slurp '{data: ., links: {}, meta: {}}'
